var sendToSecondaryMeasurementIdTask=function(){"use strict";return function(e,n,r,t){if(void 0===r&&(r=[]),void 0===t&&(t=[]),!e||!n||!Array.isArray(n)||0===n.length)return console.error("sendToSecondaryMeasurementIdTask: Request and Measurement IDs are required."),e;var o=JSON.parse(JSON.stringify(e));return o.events=function(e,n,r){var t=function(e){return Array.isArray(e)&&e.length>0},o=function(e,n,r){return n?e.filter((function(e){return r?n.has(e.en):!n.has(e.en)})):e};return t(n)?o(e,new Set(n),!0):t(r)?o(e,new Set(r),!1):e}(o.events,r,t),o.events.length>0&&n.forEach((function(e){var n,r,t,a,s,i,c;if(/^(G-|MC-)[A-Z0-9]+$/.test(e)){o.sharedPayload.tid=e;var u=(t=(r=o).endpoint,a=r.sharedPayload,s=r.events,i=new URLSearchParams(a).toString(),c=s.map((function(e){return new URLSearchParams(e).toString()})),{resource:1===s.length?"".concat(t,"?").concat(i,"&").concat(c[0]):"".concat(t,"?").concat(i),options:{method:"POST",body:s.length>1?c.join("\r\n"):null}});(null===(n=window.GA4CustomTask)||void 0===n?void 0:n.originalFetch)?window.GA4CustomTask.originalFetch(u.resource,u.options):console.error("GA4CustomTask.originalFetch is not defined.")}else console.error("Invalid Measurement ID format, skipping:",e)})),e}}();
